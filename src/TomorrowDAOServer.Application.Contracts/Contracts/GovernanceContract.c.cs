// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/contract/governance_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace TomorrowDAO.Contracts.Governance {

  #region Events
  public partial class GovernanceSchemeAdded : aelf::IEvent<GovernanceSchemeAdded>
  {
    public global::System.Collections.Generic.IEnumerable<GovernanceSchemeAdded> GetIndexed()
    {
      return new List<GovernanceSchemeAdded>
      {
      };
    }

    public GovernanceSchemeAdded GetNonIndexed()
    {
      return new GovernanceSchemeAdded
      {
        DaoId = DaoId,
        SchemeId = SchemeId,
        SchemeAddress = SchemeAddress,
        GovernanceMechanism = GovernanceMechanism,
        SchemeThreshold = SchemeThreshold,
        GovernanceToken = GovernanceToken,
      };
    }
  }

  public partial class GovernanceSchemeThresholdUpdated : aelf::IEvent<GovernanceSchemeThresholdUpdated>
  {
    public global::System.Collections.Generic.IEnumerable<GovernanceSchemeThresholdUpdated> GetIndexed()
    {
      return new List<GovernanceSchemeThresholdUpdated>
      {
      };
    }

    public GovernanceSchemeThresholdUpdated GetNonIndexed()
    {
      return new GovernanceSchemeThresholdUpdated
      {
        DaoId = DaoId,
        SchemeAddress = SchemeAddress,
        UpdateSchemeThreshold = UpdateSchemeThreshold,
      };
    }
  }

  public partial class GovernanceSchemeThresholdRemoved : aelf::IEvent<GovernanceSchemeThresholdRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<GovernanceSchemeThresholdRemoved> GetIndexed()
    {
      return new List<GovernanceSchemeThresholdRemoved>
      {
      };
    }

    public GovernanceSchemeThresholdRemoved GetNonIndexed()
    {
      return new GovernanceSchemeThresholdRemoved
      {
        DaoId = DaoId,
        SchemeAddress = SchemeAddress,
      };
    }
  }

  public partial class GovernanceTokenSet : aelf::IEvent<GovernanceTokenSet>
  {
    public global::System.Collections.Generic.IEnumerable<GovernanceTokenSet> GetIndexed()
    {
      return new List<GovernanceTokenSet>
      {
      };
    }

    public GovernanceTokenSet GetNonIndexed()
    {
      return new GovernanceTokenSet
      {
        DaoId = DaoId,
        GovernanceToken = GovernanceToken,
      };
    }
  }

  public partial class ProposalCreated : aelf::IEvent<ProposalCreated>
  {
    public global::System.Collections.Generic.IEnumerable<ProposalCreated> GetIndexed()
    {
      return new List<ProposalCreated>
      {
      };
    }

    public ProposalCreated GetNonIndexed()
    {
      return new ProposalCreated
      {
        DaoId = DaoId,
        ProposalId = ProposalId,
        ProposalTitle = ProposalTitle,
        ProposalDescription = ProposalDescription,
        ForumUrl = ForumUrl,
        ProposalType = ProposalType,
        ActiveStartTime = ActiveStartTime,
        ActiveEndTime = ActiveEndTime,
        ExecuteStartTime = ExecuteStartTime,
        ExecuteEndTime = ExecuteEndTime,
        ProposalStatus = ProposalStatus,
        ProposalStage = ProposalStage,
        Proposer = Proposer,
        SchemeAddress = SchemeAddress,
        Transaction = Transaction,
        VoteSchemeId = VoteSchemeId,
        VetoProposalId = VetoProposalId,
        ActiveTimePeriod = ActiveTimePeriod,
      };
    }
  }

  public partial class ProposalVetoed : aelf::IEvent<ProposalVetoed>
  {
    public global::System.Collections.Generic.IEnumerable<ProposalVetoed> GetIndexed()
    {
      return new List<ProposalVetoed>
      {
      };
    }

    public ProposalVetoed GetNonIndexed()
    {
      return new ProposalVetoed
      {
        DaoId = DaoId,
        ProposalId = ProposalId,
        VetoProposalId = VetoProposalId,
        VetoTime = VetoTime,
      };
    }
  }

  public partial class ProposalExecuted : aelf::IEvent<ProposalExecuted>
  {
    public global::System.Collections.Generic.IEnumerable<ProposalExecuted> GetIndexed()
    {
      return new List<ProposalExecuted>
      {
      };
    }

    public ProposalExecuted GetNonIndexed()
    {
      return new ProposalExecuted
      {
        DaoId = DaoId,
        ProposalId = ProposalId,
        ExecuteTime = ExecuteTime,
      };
    }
  }

  public partial class DaoProposalTimePeriodSet : aelf::IEvent<DaoProposalTimePeriodSet>
  {
    public global::System.Collections.Generic.IEnumerable<DaoProposalTimePeriodSet> GetIndexed()
    {
      return new List<DaoProposalTimePeriodSet>
      {
      };
    }

    public DaoProposalTimePeriodSet GetNonIndexed()
    {
      return new DaoProposalTimePeriodSet
      {
        DaoId = DaoId,
        ActiveTimePeriod = ActiveTimePeriod,
        VetoActiveTimePeriod = VetoActiveTimePeriod,
        PendingTimePeriod = PendingTimePeriod,
        ExecuteTimePeriod = ExecuteTimePeriod,
        VetoExecuteTimePeriod = VetoExecuteTimePeriod,
      };
    }
  }

  #endregion
  public static partial class GovernanceContractContainer
  {
    static readonly string __ServiceName = "GovernanceContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.AddGovernanceSchemeInput> __Marshaller_AddGovernanceSchemeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.AddGovernanceSchemeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.UpdateGovernanceSchemeThresholdInput> __Marshaller_UpdateGovernanceSchemeThresholdInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.UpdateGovernanceSchemeThresholdInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.RemoveGovernanceSchemeInput> __Marshaller_RemoveGovernanceSchemeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.RemoveGovernanceSchemeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.SetGovernanceTokenInput> __Marshaller_SetGovernanceTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.SetGovernanceTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.AddressList> __Marshaller_AddressList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.AddressList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.GovernanceSchemeList> __Marshaller_GovernanceSchemeList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.GovernanceSchemeList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.GovernanceScheme> __Marshaller_GovernanceScheme = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.GovernanceScheme.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.CalculateGovernanceSchemeAddressInput> __Marshaller_CalculateGovernanceSchemeAddressInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.CalculateGovernanceSchemeAddressInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.CreateProposalInput> __Marshaller_CreateProposalInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.CreateProposalInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.CreateVetoProposalInput> __Marshaller_CreateVetoProposalInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.CreateVetoProposalInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.CreateTransferProposalInput> __Marshaller_CreateTransferProposalInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.CreateTransferProposalInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.VetoProposalInput> __Marshaller_VetoProposalInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.VetoProposalInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.SetProposalTimePeriodInput> __Marshaller_SetProposalTimePeriodInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.SetProposalTimePeriodInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.ProposalInfoOutput> __Marshaller_ProposalInfoOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.ProposalInfoOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.DaoProposalTimePeriod> __Marshaller_DaoProposalTimePeriod = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.DaoProposalTimePeriod.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.GovernanceSchemeThreshold> __Marshaller_GovernanceSchemeThreshold = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.GovernanceSchemeThreshold.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::TomorrowDAO.Contracts.Governance.ProposalStatusOutput> __Marshaller_ProposalStatusOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TomorrowDAO.Contracts.Governance.ProposalStatusOutput.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::TomorrowDAO.Contracts.Governance.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetTokenContract = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetTokenContract",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.AddGovernanceSchemeInput, global::AElf.Types.Address> __Method_AddGovernanceScheme = new aelf::Method<global::TomorrowDAO.Contracts.Governance.AddGovernanceSchemeInput, global::AElf.Types.Address>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddGovernanceScheme",
        __Marshaller_AddGovernanceSchemeInput,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.UpdateGovernanceSchemeThresholdInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateGovernanceSchemeThreshold = new aelf::Method<global::TomorrowDAO.Contracts.Governance.UpdateGovernanceSchemeThresholdInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateGovernanceSchemeThreshold",
        __Marshaller_UpdateGovernanceSchemeThresholdInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.RemoveGovernanceSchemeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveGovernanceScheme = new aelf::Method<global::TomorrowDAO.Contracts.Governance.RemoveGovernanceSchemeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveGovernanceScheme",
        __Marshaller_RemoveGovernanceSchemeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.SetGovernanceTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetGovernanceToken = new aelf::Method<global::TomorrowDAO.Contracts.Governance.SetGovernanceTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetGovernanceToken",
        __Marshaller_SetGovernanceTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.AddressList> __Method_GetDaoGovernanceSchemeAddressList = new aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.AddressList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDaoGovernanceSchemeAddressList",
        __Marshaller_aelf_Hash,
        __Marshaller_AddressList);

    static readonly aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.GovernanceSchemeList> __Method_GetDaoGovernanceSchemeList = new aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.GovernanceSchemeList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDaoGovernanceSchemeList",
        __Marshaller_aelf_Hash,
        __Marshaller_GovernanceSchemeList);

    static readonly aelf::Method<global::AElf.Types.Address, global::TomorrowDAO.Contracts.Governance.GovernanceScheme> __Method_GetGovernanceScheme = new aelf::Method<global::AElf.Types.Address, global::TomorrowDAO.Contracts.Governance.GovernanceScheme>(
        aelf::MethodType.View,
        __ServiceName,
        "GetGovernanceScheme",
        __Marshaller_aelf_Address,
        __Marshaller_GovernanceScheme);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.CalculateGovernanceSchemeAddressInput, global::AElf.Types.Address> __Method_CalculateGovernanceSchemeAddress = new aelf::Method<global::TomorrowDAO.Contracts.Governance.CalculateGovernanceSchemeAddressInput, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "CalculateGovernanceSchemeAddress",
        __Marshaller_CalculateGovernanceSchemeAddressInput,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.CreateProposalInput, global::AElf.Types.Hash> __Method_CreateProposal = new aelf::Method<global::TomorrowDAO.Contracts.Governance.CreateProposalInput, global::AElf.Types.Hash>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateProposal",
        __Marshaller_CreateProposalInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.CreateVetoProposalInput, global::AElf.Types.Hash> __Method_CreateVetoProposal = new aelf::Method<global::TomorrowDAO.Contracts.Governance.CreateVetoProposalInput, global::AElf.Types.Hash>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateVetoProposal",
        __Marshaller_CreateVetoProposalInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.CreateTransferProposalInput, global::AElf.Types.Hash> __Method_CreateTransferProposal = new aelf::Method<global::TomorrowDAO.Contracts.Governance.CreateTransferProposalInput, global::AElf.Types.Hash>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateTransferProposal",
        __Marshaller_CreateTransferProposalInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.VetoProposalInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_VetoProposal = new aelf::Method<global::TomorrowDAO.Contracts.Governance.VetoProposalInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "VetoProposal",
        __Marshaller_VetoProposalInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ExecuteProposal = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ExecuteProposal",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::TomorrowDAO.Contracts.Governance.SetProposalTimePeriodInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetProposalTimePeriod = new aelf::Method<global::TomorrowDAO.Contracts.Governance.SetProposalTimePeriodInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetProposalTimePeriod",
        __Marshaller_SetProposalTimePeriodInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.ProposalInfoOutput> __Method_GetProposalInfo = new aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.ProposalInfoOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProposalInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_ProposalInfoOutput);

    static readonly aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.DaoProposalTimePeriod> __Method_GetDaoProposalTimePeriod = new aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.DaoProposalTimePeriod>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDaoProposalTimePeriod",
        __Marshaller_aelf_Hash,
        __Marshaller_DaoProposalTimePeriod);

    static readonly aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.GovernanceSchemeThreshold> __Method_GetProposalSnapShotScheme = new aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.GovernanceSchemeThreshold>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProposalSnapShotScheme",
        __Marshaller_aelf_Hash,
        __Marshaller_GovernanceSchemeThreshold);

    static readonly aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.ProposalStatusOutput> __Method_GetProposalStatus = new aelf::Method<global::AElf.Types.Hash, global::TomorrowDAO.Contracts.Governance.ProposalStatusOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProposalStatus",
        __Marshaller_aelf_Hash,
        __Marshaller_ProposalStatusOutput);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TomorrowDAO.Contracts.Governance.GovernanceContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::TomorrowDAO.Contracts.Governance.GovernanceContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of GovernanceContract</summary>
    // public abstract partial class GovernanceContractBase : AElf.Sdk.CSharp.CSharpSmartContract<TomorrowDAO.Contracts.Governance.GovernanceContractState>
    // {
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::TomorrowDAO.Contracts.Governance.InitializeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetTokenContract(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address AddGovernanceScheme(global::TomorrowDAO.Contracts.Governance.AddGovernanceSchemeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateGovernanceSchemeThreshold(global::TomorrowDAO.Contracts.Governance.UpdateGovernanceSchemeThresholdInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveGovernanceScheme(global::TomorrowDAO.Contracts.Governance.RemoveGovernanceSchemeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetGovernanceToken(global::TomorrowDAO.Contracts.Governance.SetGovernanceTokenInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::TomorrowDAO.Contracts.Governance.AddressList GetDaoGovernanceSchemeAddressList(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::TomorrowDAO.Contracts.Governance.GovernanceSchemeList GetDaoGovernanceSchemeList(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::TomorrowDAO.Contracts.Governance.GovernanceScheme GetGovernanceScheme(global::AElf.Types.Address input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address CalculateGovernanceSchemeAddress(global::TomorrowDAO.Contracts.Governance.CalculateGovernanceSchemeAddressInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Hash CreateProposal(global::TomorrowDAO.Contracts.Governance.CreateProposalInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Hash CreateVetoProposal(global::TomorrowDAO.Contracts.Governance.CreateVetoProposalInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Hash CreateTransferProposal(global::TomorrowDAO.Contracts.Governance.CreateTransferProposalInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty VetoProposal(global::TomorrowDAO.Contracts.Governance.VetoProposalInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ExecuteProposal(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetProposalTimePeriod(global::TomorrowDAO.Contracts.Governance.SetProposalTimePeriodInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::TomorrowDAO.Contracts.Governance.ProposalInfoOutput GetProposalInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::TomorrowDAO.Contracts.Governance.DaoProposalTimePeriod GetDaoProposalTimePeriod(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::TomorrowDAO.Contracts.Governance.GovernanceSchemeThreshold GetProposalSnapShotScheme(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::TomorrowDAO.Contracts.Governance.ProposalStatusOutput GetProposalStatus(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    // }
    //
    // public static aelf::ServerServiceDefinition BindService(GovernanceContractBase serviceImpl)
    // {
    //   return aelf::ServerServiceDefinition.CreateBuilder()
    //       .AddDescriptors(Descriptors)
    //       .AddMethod(__Method_Initialize, serviceImpl.Initialize)
    //       .AddMethod(__Method_SetTokenContract, serviceImpl.SetTokenContract)
    //       .AddMethod(__Method_AddGovernanceScheme, serviceImpl.AddGovernanceScheme)
    //       .AddMethod(__Method_UpdateGovernanceSchemeThreshold, serviceImpl.UpdateGovernanceSchemeThreshold)
    //       .AddMethod(__Method_RemoveGovernanceScheme, serviceImpl.RemoveGovernanceScheme)
    //       .AddMethod(__Method_SetGovernanceToken, serviceImpl.SetGovernanceToken)
    //       .AddMethod(__Method_GetDaoGovernanceSchemeAddressList, serviceImpl.GetDaoGovernanceSchemeAddressList)
    //       .AddMethod(__Method_GetDaoGovernanceSchemeList, serviceImpl.GetDaoGovernanceSchemeList)
    //       .AddMethod(__Method_GetGovernanceScheme, serviceImpl.GetGovernanceScheme)
    //       .AddMethod(__Method_CalculateGovernanceSchemeAddress, serviceImpl.CalculateGovernanceSchemeAddress)
    //       .AddMethod(__Method_CreateProposal, serviceImpl.CreateProposal)
    //       .AddMethod(__Method_CreateVetoProposal, serviceImpl.CreateVetoProposal)
    //       .AddMethod(__Method_CreateTransferProposal, serviceImpl.CreateTransferProposal)
    //       .AddMethod(__Method_VetoProposal, serviceImpl.VetoProposal)
    //       .AddMethod(__Method_ExecuteProposal, serviceImpl.ExecuteProposal)
    //       .AddMethod(__Method_SetProposalTimePeriod, serviceImpl.SetProposalTimePeriod)
    //       .AddMethod(__Method_GetProposalInfo, serviceImpl.GetProposalInfo)
    //       .AddMethod(__Method_GetDaoProposalTimePeriod, serviceImpl.GetDaoProposalTimePeriod)
    //       .AddMethod(__Method_GetProposalSnapShotScheme, serviceImpl.GetProposalSnapShotScheme)
    //       .AddMethod(__Method_GetProposalStatus, serviceImpl.GetProposalStatus).Build();
    // }

  }
}
#endregion

